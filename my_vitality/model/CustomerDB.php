<?php
class CustomerDB {
    /*
    * @method - addCustomer($customer)
    * @description - add customer to DB
    * cusID is dummy number at this point - ID will be generated when inserted into DB
    * @param - customer Object
    * @return integer representing the auto generated ID or 0 for no rows affected or if query did not execute at all
    */
    public static function addCustomer($customer) {
        $db = Database::getDB();

        $name = $customer->getName();
        $surname = $customer->getSurname();
        $homePhone = $customer->getHomeTel();
        $workPhone = $customer->getWorkTel();
        $cellPhone = $customer->getCell();
        $reference = $customer->getReference();

        $query = 'INSERT INTO CUSTOMER (cusName, cusSurname, cusHomeTel, cusWorkTel, cusCel, refID)
        VALUES (:name, :surname, :homePhone, :workPhone, :cellPhone, :reference)';

        $statement = $db->prepare($query);

        $statement->bindValue(':name', $name);
        $statement->bindValue(':surname', $surname);
        $statement->bindValue(':homePhone', $homePhone);
        $statement->bindValue(':workPhone', $workPhone);
        $statement->bindValue(':cellPhone', $cellPhone);
        $statement->bindValue(':reference', $reference);

        $success = $statement->execute();

        if ($success) { // check query was successfully executed
            $count = $statement->rowCount();
            if ($count == 0) { // ensure that a row was inserted
                return 0;
            } else { // return autogenerated ID
                return $db->lastInsertID();
            }
        } else {
            return 0;
        }

    }

    /**
    * @method - getCustomerByInvoice()
    * @description - get the customer associated with an invoice
    * @param - $id - the ID of a invoice
    * @return - customer object
    */
    public static function getCustomerByInvoice($id) {
        $db = Database::getDB();

        $query = 'SELECT cusID, cusName, cusSurname, cusEmailAddress, cusHomeTel, cusWorkTel, cusCel, refID
        FROM INVOICE JOIN CUSTOMER USING(cusID) JOIN CUS_EMAIL USING (cusID)
        WHERE invID = :id';

        $statement = $db->prepare($query);

        $statement->bindValue(':id', $id);

        $success = $statement->execute();

        if ($success) {
            $customer = $statement->fetch();
            $statement->closeCursor();

            $id = $customer['cusID'];
            $name = $customer['cusName'];
            $surname = $customer['cusSurname'];
            $email = $customer['cusEmailAddress'];
            $home = $customer['cusHomeTel'];
            $work = $customer['cusWorkTel'];
            $cell = $customer['cusCel'];
            $refID = $customer['refID'];

            $cusObj = new Customer($id, $name, $surname, $email, $home, $work, $cell, $refID);

            return $cusObj;
        } else {
            return "";
        }
    }

    /**
    * @method - getCustomerB()
    * @description - get the customer associated with its ID
    * @param - $id - the ID of a customer
    * @return - customer object
    */
    public static function getCustomer($id) {
        $db = Database::getDB();

        $query = 'SELECT cusID, cusName, cusSurname, cusEmailAddress, cusHomeTel, cusWorkTel, cusCel, refID
        FROM CUSTOMER JOIN CUS_EMAIL USING (cusID)
        WHERE cusID = :id';

        $statement = $db->prepare($query);

        $statement->bindValue(':id', $id);

        $success = $statement->execute();

        if ($success) {
            $customer = $statement->fetch();
            $statement->closeCursor();

            $id = $customer['cusID'];
            $name = $customer['cusName'];
            $surname = $customer['cusSurname'];
            $email = $customer['cusEmailAddress'];
            $home = $customer['cusHomeTel'];
            $work = $customer['cusWorkTel'];
            $cell = $customer['cusCel'];
            $refID = $customer['refID'];

            $cusObj = new Customer($id, $name, $surname, $email, $home, $work, $cell, $refID);

            return $cusObj;
        } else {
            return "";
        }
    }

}

?>
